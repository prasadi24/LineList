@using LineList.Cenovus.Com.Domain.DataTransferObjects
@model SearchLineListViewModel

@{
    Layout = "~/Views/Shared/_LayoutFull.cshtml";
}


<div class="mt-md-0">
    <div class="row">
        <div class="card">
            <div class="card-header mt-2 border-bottom-0">
                <div class="d-flex justify-content-between align-items-center">
                    <h5 class="mb-3 page-header">Line Database Search</h5>
                </div>
            </div>
            <div class="card-header bg-secondary">
                <div class="d-flex justify-content-between align-items-center">
                    <h5 class="text-uppercase text-white fw-bold" style="margin-bottom:0px;">Search for a Line</h5>
                    <a class="btn btn-primary ms-auto" data-bs-toggle="collapse" href="#searchPnl" role="button">
                        <i class="fas fa-chevron-down"></i> Toggle Search
                    </a>
                </div>
            </div>
            @* <div class="table"> *@
            <div id="searchPnl" class="collapse show">
                <div class="card-body border-bottom-0">
                    <form asp-action="SearchResult" method="post">

                        <!-- Row 1 -->
                        <div class="row mb-1">
                            <div class="col-md-4 d-flex align-items-center">
                                <label class="me-2 fw-bold w-50">Facility:</label>
                                <select id="facilityDropdown" asp-for="SelectedFacilityId" class="me-4 form-select">
                                    <option value="">-- Select --</option>
                                    @foreach (var facility in Model.Facilities)
                                    {
                                        <option value="@facility.Id">@facility.Name - @facility.Description</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-4 d-flex align-items-center">
                                <label class="me-2 fw-bold w-50">Area:</label>
                                <select id="areaDropdown" asp-for="SelectedAreaId" class="me-4 form-select">
                                    <option value="">-- Select --</option>
                                    @foreach (var area in Model.Areas)
                                    {
                                        <option value="@area.Id">@area.Name - @area.Description</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-4 d-flex align-items-center">
                                <label class="me-2 fw-bold w-50">Pipe Specification:</label>
                                <select id="pipeSpecificationDropdown" asp-for="SelectedPipeSpecificationId" class="me-4 form-select">
                                    <option value="">-- Select --</option>
                                    @foreach (var pipeSpec in Model.PipeSpecifications)
                                    {
                                        <option value="@pipeSpec.Id">@pipeSpec.Name - @pipeSpec.Description</option>
                                    }
                                </select>
                            </div>
                        </div>

                        <!-- Row 2 -->
                        <div class="row mb-1">
                            <div class="col-md-4 d-flex align-items-center">
                                <label class="me-2 fw-bold w-50">Specification:</label>
                                <select id="specificationsDropdown" asp-for="SelectedSpecificationId" class="me-4 form-select">
                                    <option value="">-- Select --</option>
                                    @foreach (var spec in Model.Specifications)
                                    {
                                        <option value="@spec.Id">@spec.Name- @spec.Description</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-4 d-flex align-items-center">
                                <label class="me-2 fw-bold w-50">Line Revision Status:</label>
                                <select id="lineStatusDropdown" asp-for="SelectedLineStatusId" class="me-4 form-select">
                                    <option value="">-- Select --</option>
                                    @foreach (var status in Model.LineStatuses)
                                    {
                                        <option value="@status.Id">@status.Name</option>
                                    }
                                </select>
                            </div>
                            <!-- empty placeholder (under Pipe Specification) -->
                            <div class="col-md-4 d-flex align-items-center">
                                <label class="me-2 fw-bold w-50">Document Number:</label>
                                <select id="documentNumberDropdown" asp-for="SelectedDocumentNumberId" class="me-4 form-select">
                                    <option value="">-- Select --</option>
                                    @foreach (var epProject in Model.EPProjects)
                                    {
                                        <option value="@epProject.Id">@epProject.Name- @epProject.Description</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-4"></div>
                        </div>

                        <!-- Row 3 -->
                        <div class="row mb-1">
                            <div class="col-md-4 d-flex align-items-center">
                                <label class="me-2 fw-bold w-50">Location:</label>
                                <select id="locationDropdown" asp-for="SelectedLocationId" class="me-4 form-select">
                                    <option value="">-- Select --</option>
                                    @foreach (var location in Model.Locations)
                                    {
                                        <option value="@location.Id">@location.Name- @location.Description</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-4 d-flex align-items-center">
                                <label class="me-2 fw-bold w-50">Project:</label>
                                <select id="epProjectDropdown" asp-for="SelectedEPProjectId" class="me-4 form-select">
                                    <option value="">-- Select --</option>
                                    @foreach (var epProject in Model.EPProjects)
                                    {
                                        <option value="@epProject.Id">@epProject.Name- @epProject.Description</option>
                                    }
                                </select>
                            </div>
                           
                        </div>

                        <!-- Row 4 -->
                        <div class="row mb-1">
                            <div class="col-md-4 d-flex align-items-center">
                                <label class="me-2 fw-bold w-50">Commodity:</label>
                                <select id="commodityDropdown" asp-for="SelectedCommodityId" class="me-4 form-select">
                                    <option value="">-- Select --</option>
                                    @foreach (var commodity in Model.Commodities)
                                    {
                                        <option value="@commodity.Id">@commodity.Name - @commodity.Description</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-4 d-flex align-items-center">
                                <label class="me-2 fw-bold w-50">MIN (Modular ID):</label>
                                <select id="modularDropdown" asp-for="SelectedModularID" class="me-4 form-select">
                                    <option value="">-- Select --</option>
                                    @foreach (var min in Model.ModularDetails)
                                    {
                                        <option value="@min.Name">@min.Value</option>
                                    }
                                </select>
                            </div>

                        </div>
                        <!-- Row 5 -->
                        <div class="row mb-1">
                            <div class="col-md-4 d-flex align-items-center">
                                <label class="me-2 fw-bold w-50">Line Sequence #:</label>
                                <input asp-for="SelectedSequenceNumber" type="text" class="me-4 form-control" />
                            </div>
                            <div class="col-md-4 d-flex align-items-center">
                                <div class="form-check me-3">
                                    <input asp-for="ShowOnlyActive" id="ShowOnlyActive" class="form-check-input" type="checkbox" />
                                    <label class="form-check-label">ONLY SHOW ACTIVE</label>
                                </div>
                                <div class="form-check">
                                    <input asp-for="ShowDrafts" class="form-check-input" type="checkbox" />
                                    <label class="form-check-label">Show Drafts</label>
                                </div>
                            </div>

                        </div>

                        <!-- Action Buttons -->
                        <div class="row">
                            <div class="col-12 text-end">
                                <button type="reset" class="btn btn-outline-secondary me-2">
                                    <i class="fas fa-times"></i> Clear Criteria
                                </button>
                                <button type="button" id="btnSearch" class="btn btn-primary"><i class="fas fa-search"></i> Search</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <hr />
            <div class="d-flex justify-content-end align-items-center col-12 text-end mb-2">
                <div class="d-flex align-items-center ms-auto">
                    <button id="exportExcel" class="btn btn-primary me-2">
                        <i class="fas fa-file-excel"></i> EXPORT TO EXCEL
                    </button>
                    <button id="exportCSV" class="btn btn-primary border-end me-2">
                        <i class="fas fa-file-csv"></i> EXPORT TO CSV
                    </button>
                </div>
            </div>
            <div class="table">
                <table id="dataTable" class="table">
                    <thead>
                        <tr>
                            <th colspan="4" class="text-center border-end">Line List</th>
                            <th colspan="12" class="text-center">Line</th>
                        </tr>

                        <tr>
                            <th><button id="toggleFilters" class="btn-primary custom-icon-hover"><i class="fas fa-search"></i></button> Actions</th>
                            <th>Document</th>
                            <th>Rev</th>
                            <th>Status</th>
                            <th>Spec</th>
                            <th>P/C</th>
                            <th>Area</th>
                            <th>Location</th>
                            <th>Pipe Spec</th>
                            <th>Commodity</th>
                            <th>Size NPS</th>
                            <th>Seq#</th>
                            <th>Status</th>
                            <th>Rev.</th>
                            <th>MIN</th>
                            <th>Created On</th>
                        </tr>
                        <tr id="searchInputs" class="filter-row">
                            <th></th>  <!-- Actions column (no search) -->
                            <th><input type="text" class="form-control" placeholder="Document" /></th>
                            <th><input type="text" class="form-control" placeholder="Rev" /></th>
                            <th><input type="text" class="form-control" placeholder="Status" /></th>
                            <th><input type="text" class="form-control" placeholder="Spec" /></th>
                            <th><input type="text" class="form-control" placeholder="P/C" /></th>
                            <th><input type="text" class="form-control" placeholder="Area" /></th>
                            <th><input type="text" class="form-control" placeholder="Location" /></th>
                            <th><input type="text" class="form-control" placeholder="Pipe Spec" /></th>
                            <th><input type="text" class="form-control" placeholder="Commodity" /></th>
                            <th><input type="text" class="form-control" placeholder="Size NPS" /></th>
                            <th><input type="text" class="form-control" placeholder="Seq#" /></th>
                            <th><input type="text" class="form-control" placeholder="Status" /></th>
                            <th><input type="text" class="form-control" placeholder="Rev." /></th>
                            <th><input type="text" class="form-control" placeholder="MIN" /></th>
                            <th><input type="text" class="form-control" placeholder="Created Date" /></th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Modal for Create/Update -->
<div class="modal fade" id="LineListCreateModal" tabindex="-1" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title page-header"></h5>
                <button type="button" class="close" data-bs-dismiss="modal">×</button>
            </div>
            <div class="modal-body" id="modalContent"></div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        $(document).ready(function () {
            initializeDataTable();
            table.on('draw', function () { updateMoveButtons(); });
            setupEventHandlers();
            if ($("#showActiveOnly").is(":checked")) {
                filterActiveRecords();
            }

            var autoSearch = @Json.Serialize(Model.AutoSearch);
            console.log("AutoSearch value: ", autoSearch);

            // Handle search button click
            $('#btnSearch').on('click', function (e) {
                e.preventDefault(); // Prevent default form submission

                let formData = $('form').serialize(); // Serialize form data

                $.ajax({
                    url: '@Url.Action("SearchResult", "LineDBSearch")', // Update with your actual controller
                    type: 'POST',
                    data: formData,
                    success: function (response) {
                        console.log(response);
                        // Clear existing data and add new data
                        let table = $('#dataTable').DataTable();
                        table.clear(); // Clear existing rows

                        $.each(response, function (index, item) {
                            table.row.add(item);
                        });
                        table.draw(); // Refresh table
                    },
                    error: function (xhr, status, error) {
                        console.error("Error fetching data:", error);
                    }
                });
            });

            $('#documentNumberDropdown, #epProjectDropdown, #locationDropdown, #lineStatusDropdown, #epCompanyDropdown, #specificationsDropdown, #projectTypeDropdown, #cenovusProjectDropdown, #facilityDropdown')
                .change(function () {
                    loadDependentDropdowns();
                });

            function loadDependentDropdowns() {
                var requestData = {
                    facilityId: $('#facilityDropdown').val(),
                    cenovusProjectId: $('#cenovusProjectDropdown').val(),
                    projectTypeId: $('#projectTypeDropdown').val(),
                    specificationsId: $('#specificationsDropdown').val(),
                    epCompanyId: $('#epCompanyDropdown').val(),
                    lineStatusId: $('#lineStatusDropdown').val(),
                    locationId: $('#locationDropdown').val(),
                    epProjectId: $('#epProjectDropdown').val(),
                    documentNumberId: $('#documentNumberDropdown').val()
                };

                $.ajax({
                    url: '@Url.Action("GetDependentDropdowns", "DropdownCommon")',
                    type: 'GET',
                    data: requestData,
                    success: function (response) {
                        updateDropdown('#documentNumberDropdown', response.documentNumbers);
                        updateDropdown('#epProjectDropdown', response.epProjects);
                        updateDropdown('#locationDropdown', response.locations);
                        updateDropdown('#specificationsDropdown', response.specifications);
                        updateDropdown('#cenovusProjectDropdown', response.cenovusProjects);
                        updateDropdown('#pipeSpecificationsDropdown', response.pipeSpecifications);
                    },
                    error: function () {
                        alert("Failed to load dependent dropdowns.");
                    }
                });
            }

            function updateDropdown(dropdownId, data) {
                var dropdown = $(dropdownId);
                dropdown.empty().append('<option value="">-- Select --</option>');
                $.each(data, function (index, item) {
                    dropdown.append($('<option></option>').val(item.id).text(item.name + " - " + item.description));
                });
            }

            var autoSearch = @Model.AutoSearch.ToString().ToLower();
if (autoSearch) {
    $('#facilityDropdown').val('CB7B27C6-F926-4C3D-9A78-08DB0DBD746C'); // Select BT
    $('#btnSearch').trigger('click'); // Trigger search
}


        });

        // Hide the search toggle in datatable
        $('.filter-row').hide();

        // Toggle filter button click
        $('#toggleFilters').click(function () {
            $('.filter-row').toggle();
        });

        function filterActiveRecords() {
            var showActiveOnly = $('#showActiveOnly').prop('checked');

            if (showActiveOnly) {
                table.column(3).search("^Yes$", true, false).draw();
            } else {
                table.column(3).search("").draw();
            }
        }
        function openLineCollectionModal(action, url) {
            let modal = $('#LineListCreateModal');
            let title = action;// === 'Create' ? 'Add a New Line Collection' : 'Update Line Collection';

            $.get(url, function (response) {

                 $("#modalContent").html(response);
                 if(title==='Line List Details'){
                $("#isDraft").val(   $("#modalContent #isDraft").val()   );
                $("#isIssued").val(  $("#modalContent #isIssued").val()  );
                $("#isEpUser").val(  $("#modalContent #isEpUser").val()  );
                $("#isEpAdmin").val( $("#modalContent #isEpAdmin").val() );
                $("#isCenovusAdmin").val( $("#modalContent #isCenovusAdmin").val() );
                 }
                $(".modal-title").text(title);
                $.validator.unobtrusive.parse("#modalContent");
                modal.modal('show');
            }).fail(function () {
                alert("Error loading form.");
            });
            }
        function initializeDataTable() {
            let tableHeight = window.innerHeight - 150;

            window.table = $('#dataTable').DataTable({
                dom: 'Brtlip',
                orderCellsTop: true, order: [[1, 'asc']],
                scrollY: '58vh',
                scrollX: true,
                scrollCollapse: true,
                paging: false,
                autoWidth: false,
                responsive: true,
                fixedHeader: true,
                select: { style: 'single' },
                buttons: [{
                    extend: 'excel',
                    text: 'Export to Excel',
                    title: null,
                    filename: 'Export',
                    customize: customizeExcelExport,
                    className: 'btn btn-primary export-button',
                    exportOptions: {
                        columns: ":not(:first-child)",
                        modifier: {
                            search: "applied",
                            order: "applied",
                            selected: null
                        }
                    }
                }],
            columns: [
                    { data: null }, // Actions column (custom rendered below)
                    { data: "documentNumber", title: "Document" },
                    { data: "documentLineListRevision", title: "Rev." },
                    { data: "lineListStatusName", title: "Status" },
                    { data: "specificationName", title: "Spec" },
                    { data: "parentChild", title: "P/C" },
                    { data: "areaName", title: "Area" },
                    { data: "locationName", title: "Location" },
                    { data: "pipeSpecificationName", title: "PipeSpec" },
                    { data: "commoditiyName", title: "Commodity" },
                    { data: "sizeNpsName", title: "Size NPS" },
                    { data: "sequenceNumber", title: "Seq#" },
                    { data: "lineStatusName", title: "Status" },
                    { data: "documentRevision", title: "Rev." },
                    { data: "modularId", title: "MIN" },
                    { data: "createdOn", title: "CreatedDate" }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        orderable: false,
                        searchable: false,
                        width: '120px',
                        render: function (data, type, row) {
                            const lineListRevisionId = row.lineListRevisionId;
                            const lineId               = row.lineId;
                            const lineRev              = row.lineRevision;

                            let buttons = `
                              <a class="btn btn-sm btn-outline-primary view-line" data-id="${lineListRevisionId}" title="View Line List Lines">
                                    <i class="fas fa-list-ul"></i>
                                </a>`;

                                 const detailsUrl = '/LineCollection/Update?' + $.param({ lineId, lineRev });

                            buttons += `
                                <a href="${detailsUrl}" class="btn btn-sm btn-outline-primary open-modal" title="Line Details">
                                    <i class="fas fa-file-import"></i>
                                </a>`;

                            return buttons;
                        }
                    }],
                initComplete: function () {
                    let table = this;
                    this.api().columns().every(function (index) {
                        if (index === 0) return;
                        $('input', $('#searchInputs th').eq(index)).on('keyup change', function () {
                            table.api().column(index).search(this.value).draw();
                            this.header().style.width = this.width() + "px";
                        });
                    });
                      // Initialize tooltips after table is drawn
                    $('[data-bs-toggle="tooltip"]').tooltip();
                }
            });
        }

        function setupEventHandlers() {
            // ONLY SHOW ACTIVE fluids
            $('#showActiveOnly').on('change', function () {
                filterActiveRecords();
            });

            // Export to Excel
            $('#exportExcel').on('click', function () {
                table.button(0).trigger();
            });

            $('#exportCSV').on('click', function () {
            table.button(0).trigger();
            });

            // Open Create Fluid Modal
            $('#btnCreateNew').on('click', function () {
                openFluidModal('Create', '/Fluid/Create');
            });

            // Open Update Fluid Modal (Event Delegation)
            $(document).on('click', '.btn-update', function () {
                let fluidId = $(this).data("id");
                openFluidModal('Update', '/Fluid/Update/' + fluidId);
            });

            // Delete Fluid
            $(document).on('click', '.btn-delete', function () {
                let fluidId = $(this).data("id");
                if (confirm("Are you sure you want to delete this fluid?")) {
                    $.ajax({
                        url: "/Fluid/Delete/" + fluidId,
                        type: "DELETE",
                        success: function (response) {
                            if (response.success) {
                                location.reload();
                            } else {
                                alert(response.ErrorMessage || "Error deleting fluid.");
                            }
                        },
                        error: function (error) {
                            console.error("Error deleting fluid:", error);
                        }
                    });
                }
            });

                   $(document).on('click', '.open-modal', function(e) {
          e.preventDefault();
          const url   = $(this).attr('href');
          console.log('🔍 open-modal clicked, url=', url);

          // reuse your existing modal
          const modal = $('#LineListCreateModal');

          $.get(url, function(response) {
            console.log('📥 loaded _Update partial');
            $("#modalContent").html(response);
            $.validator.unobtrusive.parse("#modalContent");

            // grab the hidden SequenceNumber + Revision fields
            const seq = $("#modalContent input[name='SequenceNumber']").val();
            const rev = $("#modalContent input[name='Revision']").val();
            console.log('🛠 seq=', seq, 'rev=', rev);

            // set the modal title
            const titleText = `Line: ${seq} Rev: ${rev}`;
            console.log('🛠 setting modal title →', titleText);
            modal.find('.modal-title').text(titleText);

            modal.modal('show');
          }).fail(function() {
            alert("Error loading details");
          });
        });

            $('#dataTable tbody').on('click', '.view-line', function () {
            // var lineListRevisionId = $(this).data('id');
            var id = $(this).data('id');

        // Redirect to /LineCollection/Index?lineListRevisionId=...

            window.location.href = `/LineCollection/Index?lineListRevisionId=${id}`;

            // $.ajax({
            // 	url: '/LineCollection/Index',  Your controller action
            // 	type: 'GET',
            // 	data: { lineListRevisionId: lineListRevisionId },
            // 	success: function (response) {
            // 		Handle success (e.g., show modal, display info, etc.)
            // 		console.log('Line details:', response);
            // 		alert('Line info loaded!');
            // 	},
            // 	error: function (xhr) {
            // 		console.error('Error loading line:', xhr);
            // 		alert('Something went wrong.');
            // 	}
            // });
        });
            // Submit Create/Update Form
            $(document).on('click', '#btnSaveFluid', function (e) {
                e.preventDefault();
                let form = $("#fluidForm");

                if (form.valid()) {
                    $.ajax({
                        url: form.attr("action"),
                        type: "POST",
                        data: form.serialize(),
                        success: function (response) {
                            if (response.success) {
                                $('#fluidModal').modal('hide');
                                location.reload();
                            } else {
                                alert(response.ErrorMessage || "Error saving fluid.");
                            }
                        },
                        error: function (error) {
                            console.error("Error submitting form:", error);
                        }
                    });
                }
            });
        }

        function openFluidModal(action, url) {
            let modal = $('#fluidModal');
            let title = action === 'Create' ? 'Add a New Fluid' : 'Update Fluid';

            $.get(url, function (response) {
                $("#modalContent").html(response);
                $(".modal-title").text(title);
                $.validator.unobtrusive.parse("#modalContent");
                modal.modal('show');
            }).fail(function () {
                alert("Error loading form.");
            });
        }

        function showLineListRevision(lineListRevisionId) {
                debugger;
                var url = '@Url.Action("Update", "LineList")' + '/' + lineListRevisionId;
                $('#lineDetailsFrame').attr('src', url);
                $('#lineDetailsModal').modal('show');
            }
    </script>
}
